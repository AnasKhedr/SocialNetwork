-- MySQL Script generated by MySQL Workbench
-- Fri Apr 21 15:11:39 2017
-- Model: New Model    Version: 1.3
-- Still Working Progress
-- Authors: Anas Khedr , Sultan Ibrahim , Ahmed Oraby

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Emp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Emp` (
  `idEmp` INT NOT NULL,
  `num` VARCHAR(45) NULL,
  PRIMARY KEY (`idEmp`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Devices/Component`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Devices/Component` (
  `idDevices/Component` INT UNSIGNED NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Functional` VARCHAR(45) NOT NULL,
  `Unit Count` INT NULL,
  `State` TINYINT NULL COMMENT 'borrowed or in lab',
  `picture` VARCHAR(45) NULL,
  `Datasheet` VARCHAR(45) NULL,
  PRIMARY KEY (`idDevices/Component`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `userID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NOT NULL COMMENT 'Name',
  `MiddleName` VARCHAR(45) NULL COMMENT 'Name',
  `LastName` VARCHAR(45) NOT NULL COMMENT 'Name',
  `UserName` VARCHAR(45) NOT NULL,
  `PasswordHash` VARCHAR(45) NOT NULL,
  `PictureURL` VARCHAR(45) NULL,
  `about` VARCHAR(300) NULL,
  `lastActiveTime` DATETIME NULL,
  `collegeRole` ENUM('student', 'Professor', 'TA', 'Employee', 'Alumni') NOT NULL COMMENT 'can only choose one and only one of the following: student, professor or TA.\nthe choice must be one of them.\n---------------------------------------------------------\nif you want to choose more than one of student, professor or TA then use SET() instead of ENUM()',
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Projects` (
  `idProjects` INT UNSIGNED NOT NULL,
  `Supervisor` INT UNSIGNED NOT NULL,
  `Idea` VARCHAR(45) NULL,
  `name` VARCHAR(45) NULL,
  `abstract` VARCHAR(45) NULL,
  `picture` VARCHAR(45) NULL,
  `dateStarted` DATETIME NOT NULL,
  `dateEnded` DATETIME NULL,
  `tag` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idProjects`, `Supervisor`),
  CONSTRAINT `professor`
    FOREIGN KEY (`Supervisor`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Courses` (
  `idCourses` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `about` VARCHAR(45) NULL,
  `department` VARCHAR(45) NULL,
  `Grading Schema` VARCHAR(45) NULL,
  PRIMARY KEY (`idCourses`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Researches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Researches` (
  `idResearches` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NOT NULL,
  `Idea` VARCHAR(45) NULL,
  PRIMARY KEY (`idResearches`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Labs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Labs` (
  `labID` INT NOT NULL,
  `Lab Name` VARCHAR(45) NOT NULL,
  `idGuardian` INT UNSIGNED NOT NULL,
  `Contents` INT UNSIGNED NULL,
  `place` VARCHAR(45) NULL,
  `about` VARCHAR(45) NULL,
  `picture` VARCHAR(45) NULL,
  PRIMARY KEY (`labID`),
  CONSTRAINT `guardian`
    FOREIGN KEY (`idGuardian`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Safe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Safe` (
  `idSafe` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Content` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idSafe`, `Content`),
  INDEX `fk_Safe_Device/Component_idx` (`Content` ASC),
  CONSTRAINT `fk_Safe_Labs1`
    FOREIGN KEY (`idSafe`)
    REFERENCES `mydb`.`Labs` (`Contents`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Safe_Device/Component`
    FOREIGN KEY (`Content`)
    REFERENCES `mydb`.`Devices/Component` (`idDevices/Component`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Student_have_Courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student_have_Courses` (
  `Student_idStudent` INT UNSIGNED NOT NULL COMMENT 'we can use\" Professor/Teacher_Can_Teach_Courses\" table to represent this relationship',
  `Project/Course_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Student_idStudent`, `Project/Course_id`),
  CONSTRAINT `fk_Student_have_Courses1`
    FOREIGN KEY (`Project/Course_id`)
    REFERENCES `mydb`.`Courses` (`idCourses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_have_User1`
    FOREIGN KEY (`Student_idStudent`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Professor/Teacher_Can_Teach_Courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Professor/Teacher_Can_Teach_Courses` (
  `Professor/Teacher_idProfessor` INT UNSIGNED NOT NULL,
  `Courses_idCourses` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Courses_idCourses`, `Professor/Teacher_idProfessor`),
  INDEX `fk_Professor_has_Courses_Courses1_idx` (`Courses_idCourses` ASC),
  CONSTRAINT `fk_Professor_has_Courses_Courses1`
    FOREIGN KEY (`Courses_idCourses`)
    REFERENCES `mydb`.`Courses` (`idCourses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Professor/Teacher_Can_Teach_Courses_User1`
    FOREIGN KEY (`Professor/Teacher_idProfessor`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Professor_Working_On_Researches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Professor_Working_On_Researches` (
  `Professor/Teacher_id` INT UNSIGNED NOT NULL,
  `Researches_idResearches` INT UNSIGNED NOT NULL,
  INDEX `fk_Professor_has_Researches_Researches1_idx` (`Researches_idResearches` ASC),
  PRIMARY KEY (`Professor/Teacher_id`, `Researches_idResearches`),
  CONSTRAINT `fk_Professor_has_Researches_Researches1`
    FOREIGN KEY (`Researches_idResearches`)
    REFERENCES `mydb`.`Researches` (`idResearches`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Professor_Working_On_Researches_User1`
    FOREIGN KEY (`Professor/Teacher_id`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Admin` (
  `userID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`userID`),
  CONSTRAINT `userID`
    FOREIGN KEY (`userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`skills`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`skills` (
  `skillID` INT UNSIGNED NOT NULL,
  `skill` VARCHAR(45) NULL,
  PRIMARY KEY (`skillID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_has_skills`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User_has_skills` (
  `Users_userID` INT UNSIGNED NOT NULL,
  `skills_skillID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Users_userID`, `skills_skillID`),
  INDEX `fk_Users_has_skills_skills1_idx` (`skills_skillID` ASC),
  INDEX `fk_Users_has_skills_Users1_idx` (`Users_userID` ASC),
  CONSTRAINT `fk_Users_has_skills_Users1`
    FOREIGN KEY (`Users_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_skills_skills1`
    FOREIGN KEY (`skills_skillID`)
    REFERENCES `mydb`.`skills` (`skillID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`position`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`position` (
  `userID` INT UNSIGNED NOT NULL,
  `positionName` VARCHAR(45) NOT NULL,
  `company` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`userID`, `positionName`),
  UNIQUE INDEX `positionName_UNIQUE` (`positionName` ASC),
  CONSTRAINT `fk_position_User1`
    FOREIGN KEY (`userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`projectFiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`projectFiles` (
  `projectID` INT UNSIGNED NOT NULL,
  `uploaderID` INT UNSIGNED NOT NULL,
  `uploadedTime` DATETIME NOT NULL,
  `URL` VARCHAR(45) NULL,
  `descreption` VARCHAR(45) NULL,
  PRIMARY KEY (`projectID`),
  CONSTRAINT `releated to project`
    FOREIGN KEY (`projectID`)
    REFERENCES `mydb`.`Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`messages_user_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`messages_user_user` (
  `messageID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `senderID` INT UNSIGNED NOT NULL,
  `reciverID` INT UNSIGNED NOT NULL,
  `message` VARCHAR(300) NOT NULL,
  `timeSent` DATETIME NOT NULL,
  PRIMARY KEY (`messageID`, `senderID`, `reciverID`),
  INDEX `fk_messages_User1_idx` (`senderID` ASC, `reciverID` ASC),
  CONSTRAINT `fk_messages_Users`
    FOREIGN KEY (`senderID` , `reciverID`)
    REFERENCES `mydb`.`User` (`userID` , `userID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`group` (
  `groupID` INT UNSIGNED NOT NULL,
  `groupName` VARCHAR(45) NOT NULL DEFAULT 'Group',
  PRIMARY KEY (`groupID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_has_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User_has_group` (
  `User_userID` INT UNSIGNED NOT NULL,
  `group_groupID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`User_userID`, `group_groupID`),
  INDEX `fk_User_has_group_group1_idx` (`group_groupID` ASC),
  INDEX `fk_User_has_group_User1_idx` (`User_userID` ASC),
  CONSTRAINT `fk_User_has_group_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_group_group1`
    FOREIGN KEY (`group_groupID`)
    REFERENCES `mydb`.`group` (`groupID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Notification` (
  `from_userID` INT UNSIGNED NOT NULL,
  `to_userID` INT UNSIGNED NOT NULL,
  `time` DATETIME NOT NULL,
  `payload` VARCHAR(45) NULL,
  `redirectedURL` VARCHAR(45) NULL,
  `opend?` TINYINT NULL DEFAULT 0 COMMENT 'opend or not',
  PRIMARY KEY (`from_userID`, `to_userID`, `time`),
  CONSTRAINT `fk_Notification_User2`
    FOREIGN KEY (`from_userID` , `to_userID`)
    REFERENCES `mydb`.`User` (`userID` , `userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`posts` (
  `postID` INT UNSIGNED NOT NULL,
  `userID` INT UNSIGNED NOT NULL,
  `post` VARCHAR(45) NULL,
  `tag` INT UNSIGNED NULL,
  `description` VARCHAR(45) NULL,
  `time` DATETIME NOT NULL,
  PRIMARY KEY (`postID`, `userID`),
  INDEX `fk_posts_User1_idx` (`userID` ASC),
  CONSTRAINT `fk_posts_User1`
    FOREIGN KEY (`userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Comments` (
  `postID` INT UNSIGNED NOT NULL,
  `userID` INT UNSIGNED NOT NULL COMMENT 'user who made the comment\n',
  `time` DATETIME NOT NULL,
  `comment` VARCHAR(45) NULL COMMENT 'comment itself\n',
  INDEX `post_idx` (`postID` ASC),
  PRIMARY KEY (`postID`, `userID`),
  CONSTRAINT `post`
    FOREIGN KEY (`postID`)
    REFERENCES `mydb`.`posts` (`postID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tags` (
  `tagID` INT UNSIGNED NOT NULL,
  `tag` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tagID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`borrows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`borrows` (
  `userID` INT UNSIGNED NOT NULL COMMENT 'borrower\n',
  `device/comp` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`userID`, `device/comp`),
  INDEX `fk_borrows_Devices1_idx` (`device/comp` ASC),
  CONSTRAINT `borrower`
    FOREIGN KEY (`userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_borrows_Devices1`
    FOREIGN KEY (`device/comp`)
    REFERENCES `mydb`.`Devices/Component` (`idDevices/Component`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`message_user_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`message_user_group` (
  `messageID` INT UNSIGNED NOT NULL,
  `sender_id` INT UNSIGNED NOT NULL,
  `reciver_id` INT UNSIGNED NOT NULL,
  `message` VARCHAR(300) NULL,
  `time_sent` DATETIME NULL,
  PRIMARY KEY (`messageID`, `sender_id`, `reciver_id`),
  INDEX `send_to_group_idx` (`sender_id` ASC),
  INDEX `reciver_group_idx` (`reciver_id` ASC),
  CONSTRAINT `send_to_group`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `reciver_group`
    FOREIGN KEY (`reciver_id`)
    REFERENCES `mydb`.`group` (`groupID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`student_has_Projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`student_has_Projects` (
  `User_userID` INT UNSIGNED NOT NULL,
  `Projects_idProjects` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`User_userID`, `Projects_idProjects`),
  INDEX `fk_User_has_Projects_Projects1_idx` (`Projects_idProjects` ASC),
  INDEX `fk_User_has_Projects_User1_idx` (`User_userID` ASC),
  CONSTRAINT `fk_User_has_Projects_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Projects_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `mydb`.`Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Projects_has_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Projects_has_tags` (
  `Projects_idProjects` INT UNSIGNED NOT NULL,
  `tags_tagID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Projects_idProjects`, `tags_tagID`),
  INDEX `fk_Projects_has_tags_tags1_idx` (`tags_tagID` ASC),
  INDEX `fk_Projects_has_tags_Projects1_idx` (`Projects_idProjects` ASC),
  CONSTRAINT `fk_Projects_has_tags_Projects1`
    FOREIGN KEY (`Projects_idProjects`)
    REFERENCES `mydb`.`Projects` (`idProjects`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Projects_has_tags_tags1`
    FOREIGN KEY (`tags_tagID`)
    REFERENCES `mydb`.`tags` (`tagID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`posts_has_tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`posts_has_tags` (
  `posts_postID` INT UNSIGNED NOT NULL,
  `tags_tagID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`posts_postID`, `tags_tagID`),
  INDEX `fk_posts_has_tags_tags1_idx` (`tags_tagID` ASC),
  INDEX `fk_posts_has_tags_posts1_idx` (`posts_postID` ASC),
  CONSTRAINT `fk_posts_has_tags_posts1`
    FOREIGN KEY (`posts_postID`)
    REFERENCES `mydb`.`posts` (`postID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_posts_has_tags_tags1`
    FOREIGN KEY (`tags_tagID`)
    REFERENCES `mydb`.`tags` (`tagID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`emails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`emails` (
  `user_id` INT UNSIGNED NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_emails_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`phone_numbers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`phone_numbers` (
  `user_id` INT UNSIGNED NOT NULL,
  `phone_number` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`user_id`, `phone_number`),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  CONSTRAINT `fk_phones_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
